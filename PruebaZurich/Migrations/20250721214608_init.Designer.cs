// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaZurich.Data.Context;

#nullable disable

namespace PruebaZurich.Migrations
{
    [DbContext(typeof(ZurichDBContext))]
    [Migration("20250721214608_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaZurich.Data.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "Email" }, "IX_Clientes_Email");

                    b.HasIndex(new[] { "Nombre" }, "IX_Clientes_Nombre");

                    b.HasIndex(new[] { "Identificacion" }, "UQ_Clientes_Identificacion")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Clientes__A9D10534CADBAE0C")
                        .IsUnique();

                    b.HasIndex(new[] { "Identificacion" }, "UQ__Clientes__D6F931E58BE7BC22")
                        .IsUnique();

                    b.ToTable("Clientes", "seg");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.Poliza", b =>
                {
                    b.Property<int>("PolizaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolizaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Activa");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEmision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoAsegurado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("MotivoCancelacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroPoliza")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoPolizaId")
                        .HasColumnType("int");

                    b.HasKey("PolizaId");

                    b.HasIndex("TipoPolizaId");

                    b.HasIndex(new[] { "ClienteId" }, "IX_Polizas_ClienteId");

                    b.HasIndex(new[] { "Estado" }, "IX_Polizas_Estado");

                    b.HasIndex(new[] { "FechaInicio", "FechaExpiracion" }, "IX_Polizas_Fechas");

                    b.HasIndex(new[] { "NumeroPoliza" }, "UQ_Polizas_NumeroPoliza")
                        .IsUnique();

                    b.ToTable("Polizas", "seg");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.TiposPoliza", b =>
                {
                    b.Property<int>("TipoPolizaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoPolizaId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoPolizaId");

                    b.ToTable("TiposPoliza", "seg");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.HasKey("UsuarioId");

                    b.HasIndex(new[] { "Email" }, "UQ_Usuarios_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "NombreUsuario" }, "UQ_Usuarios_NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios", "seg");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.Cliente", b =>
                {
                    b.HasOne("PruebaZurich.Data.Entities.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Clientes_Usuarios");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.Poliza", b =>
                {
                    b.HasOne("PruebaZurich.Data.Entities.Cliente", "Cliente")
                        .WithMany("Polizas")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK_Polizas_Clientes");

                    b.HasOne("PruebaZurich.Data.Entities.TiposPoliza", "TipoPoliza")
                        .WithMany("Polizas")
                        .HasForeignKey("TipoPolizaId")
                        .IsRequired()
                        .HasConstraintName("FK_Polizas_TiposPoliza");

                    b.Navigation("Cliente");

                    b.Navigation("TipoPoliza");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.Cliente", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.TiposPoliza", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("PruebaZurich.Data.Entities.Usuario", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
